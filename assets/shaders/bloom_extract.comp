#version 450

#include "set0.glsl"

layout(local_size_x = 8, local_size_y = 8) in;

layout(set = 1, binding = 0) uniform sampler2D input_image;
layout(set = 1, binding = 1, rgba32f) writeonly uniform image2D output_image;
layout(set = 1,
       binding = 2,
       rgba32f) writeonly uniform image2DArray bloom_image_array;
layout(set = 1, binding = 3, rgba32f) writeonly uniform image2D other_array[5];

layout(push_constant) uniform Config
{
  float threshold;
  float knee;
}
conf;

void
main()
{
  ivec2 gid = ivec2(gl_GlobalInvocationID.xy);

  vec2 framebuffer_size = textureSize(input_image, 0);
  if (gid.x >= int(framebuffer_size.x) || gid.y >= int(framebuffer_size.y)) {
    return;
  }

  vec2 input_size = vec2(textureSize(input_image, 0));
  vec2 uv = (vec2(gid) + 0.5) / input_size;

  vec3 color = texture(input_image, uv).rgb;
  float luminance = dot(color, vec3(0.2126, 0.7152, 0.0722));

  float soft =
    smoothstep(conf.threshold, conf.threshold + conf.knee, luminance);
  vec4 result = vec4(color * soft, 1.0);

  imageStore(output_image, gid, result);
}
